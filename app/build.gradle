apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = rootProject.ext.libGroup
version = rootProject.ext.libVersion

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName version

        archivesBaseName = 'aws-iot-device-sdk-android'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    compile 'javax.annotation:javax.annotation-api:1.2'
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name rootProject.ext.libPackageName
                description = rootProject.ext.libDescription
                url rootProject.ext.libSiteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'hospes'
                        name 'Andrew Khloponin'
                        email 'hospes.a@gmail.com'
                    }
                }
                scm {
                    connection rootProject.ext.libGitUrl
                    developerConnection rootProject.ext.libGitUrl
                    url rootProject.ext.libSiteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def bintrayUser = properties.getProperty('bintray.user')
def bintrayApiKey = properties.getProperty('bintray.apikey')

bintray {
    user = bintrayUser != null ? bintrayUser : System.getenv('BINTRAY_USER')
    key = bintrayApiKey != null ? bintrayApiKey : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']

    pkg {
        repo = 'maven'
        name = rootProject.ext.libPackageName
        licenses = ['Apache-2.0']
        websiteUrl = rootProject.ext.libSiteUrl
        issueTrackerUrl = rootProject.ext.libIssueTrackerUrl
        vcsUrl = rootProject.ext.libGitUrl
        labels = ['android', 'aws-iot', 'aws-sdk']

        version {
            name = rootProject.ext.libVersion
            desc = rootProject.ext.libDescription
            released = new Date()
        }
    }
}